if BLOCK

menu "IO Schedulers"

config IOSCHED_NOOP
	bool
	default y
	---help---
	  The no-op I/O scheduler is a minimal scheduler that does basic merging
	  and sorting. Its main uses include non-disk based block devices like
	  memory devices, and specialised software or hardware environments
	  that do their own scheduling and require only minimal assistance from
	  the kernel.

config IOSCHED_TEST
	tristate "Test I/O scheduler"
	depends on DEBUG_FS
	default m
	---help---
	  The test I/O scheduler is a duplicate of the noop scheduler with
	  addition of test utlity.
	  It allows testing a block device by dispatching specific requests
	  according to the test case and declare PASS/FAIL according to the
	  requests completion error code.

config IOSCHED_DEADLINE
	tristate "Deadline I/O scheduler"
	default y
	---help---
	  The deadline I/O scheduler is simple and compact. It will provide
	  CSCAN service with FIFO expiration of requests, switching to
	  a new point in the service tree and doing a batch of IO from there
	  in case of expiry.

config IOSCHED_MAPLE
	tristate "Maple I/O scheduler"
	default y
	---help---
	  Maple is based on the Zen and Simple I/O schedulers. It uses 
	  ZEN's first-come-first-serve style algorithm with separate
	  read/write requests and improved former/latter request handling
	  from SIO. Maple is biased towards handling asynchronous requests
	  before synchronous, and read requests before write. While this can
	  have negative aspects on write intensive tasks like file copying,
	  it slightly improves UI responsiveness. When the device is asleep,
	  maple increases the expiry time of requests so that it can handle
	  them more slowly, causing less overhead.

config IOSCHED_ROW
	tristate "ROW I/O scheduler"
	default y
	---help---
	  The ROW I/O scheduler gives priority to READ requests over the
	  WRITE requests when dispatching, without starving WRITE requests.
	  Requests are kept in priority queues. Dispatching is done in a RR
	  manner when the dispatch quantum for each queue is calculated
	  according to queue priority.
	  Most suitable for mobile devices.

config IOSCHED_CFQ
	tristate "CFQ I/O scheduler"
	default y
	---help---
	  The CFQ I/O scheduler tries to distribute bandwidth equally
	  among all processes in the system. It should provide a fair
	  and low latency working environment, suitable for both desktop
	  and server systems.

	  This is the default I/O scheduler.

config IOSCHED_ZEN
	tristate "Zen I/O scheduler"
	default y
	---help---
	  FCFS, dispatches are back-inserted, deadlines ensure fairness.
	  Should work best with devices where there is no travel delay.

config IOSCHED_SIO
	tristate "Simple I/O scheduler"
	default y
	---help---
	  The Simple I/O scheduler is an extremely simple scheduler,
	  based on noop and deadline, that relies on deadlines to
	  ensure fairness. The algorithm does not do any sorting but
	  basic merging, trying to keep a minimum overhead. It is aimed
	  mainly for aleatory access devices (eg: flash devices).

config CFQ_GROUP_IOSCHED
	bool "CFQ Group Scheduling support"
	depends on IOSCHED_CFQ && BLK_CGROUP
	default n
	---help---
	  Enable group IO scheduling in CFQ.

config IOSCHED_ZEN
	tristate "Zen I/O scheduler"
	default y
	---help---
	  FCFS, dispatches are back-inserted, deadlines ensure fairness.
	  Should work best with devices where there is no travel delay.

choice
	prompt "Default I/O scheduler"
	default DEFAULT_CFQ
	help
	  Select the I/O scheduler which will be used by default for all
	  block devices.

	config DEFAULT_DEADLINE
		bool "Deadline" if IOSCHED_DEADLINE=y

	config DEFAULT_MAPLE
		bool "Maple" if IOSCHED_MAPLE=y

	config DEFAULT_ROW
		bool "ROW" if IOSCHED_ROW=y

	config DEFAULT_CFQ
		bool "CFQ" if IOSCHED_CFQ=y

	config DEFAULT_NOOP
		bool "No-op" if IOSCHED_NOOP=y

	config DEFAULT_ZEN
		bool "ZEN" if IOSCHED_ZEN=y

	config DEFAULT_SIO
		bool "SIO" if IOSCHED_SIO=y
endchoice

config DEFAULT_IOSCHED
	string
	default "deadline" if DEFAULT_DEADLINE
	default "maple" if DEFAULT_MAPLE
	default "row" if DEFAULT_ROW
	default "cfq" if DEFAULT_CFQ
	default "noop" if DEFAULT_NOOP
	default "zen" if DEFAULT_ZEN
	default "sio" if DEFAULT_SIO

endmenu

endif
